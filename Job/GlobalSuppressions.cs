// This file is used by Code Analysis to maintain SuppressMessage
// attributes that are applied to this project.
// Project-level suppressions either have no target or are given
// a specific target and scoped to a namespace, type, member, etc.

using System.Diagnostics.CodeAnalysis;

[assembly: SuppressMessage("Design", "MA0049:Type name should not match containing namespace", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Profiles.ProfileEvents.ProfileEvents")]
[assembly: SuppressMessage("Design", "MA0049:Type name should not match containing namespace", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Job")]
[assembly: SuppressMessage("Design", "MA0046:Use EventHandler<T> to declare events", Justification = "<Pending>", Scope = "member", Target = "~E:Job.Fasades.CustomerManager.OnCustomerAdd")]
[assembly: SuppressMessage("Design", "MA0046:Use EventHandler<T> to declare events", Justification = "<Pending>", Scope = "member", Target = "~E:Job.Fasades.CustomerManager.OnCustomerChange")]
[assembly: SuppressMessage("Design", "MA0046:Use EventHandler<T> to declare events", Justification = "<Pending>", Scope = "member", Target = "~E:Job.Fasades.CustomerManager.OnCustomerRemove")]
[assembly: SuppressMessage("Design", "MA0046:Use EventHandler<T> to declare events", Justification = "<Pending>", Scope = "member", Target = "~E:Job.UC.ICache`1.OnChanged")]
[assembly: SuppressMessage("Design", "MA0046:Use EventHandler<T> to declare events", Justification = "<Pending>", Scope = "member", Target = "~E:Job.UC.ICache`1.OnCreated")]
[assembly: SuppressMessage("Design", "MA0046:Use EventHandler<T> to declare events", Justification = "<Pending>", Scope = "member", Target = "~E:Job.UC.ICache`1.OnDeleted")]
[assembly: SuppressMessage("Design", "MA0046:Use EventHandler<T> to declare events", Justification = "<Pending>", Scope = "member", Target = "~E:Job.UC.ICache`1.OnRenamed")]
[assembly: SuppressMessage("Design", "MA0046:Use EventHandler<T> to declare events", Justification = "<Pending>", Scope = "member", Target = "~E:Job.UC.IFileManager.OnAddFile")]
[assembly: SuppressMessage("Design", "MA0046:Use EventHandler<T> to declare events", Justification = "<Pending>", Scope = "member", Target = "~E:Job.UC.IFileManager.OnChangeDirectory")]
[assembly: SuppressMessage("Design", "MA0046:Use EventHandler<T> to declare events", Justification = "<Pending>", Scope = "member", Target = "~E:Job.UC.IFileManager.OnChangeFile")]
[assembly: SuppressMessage("Design", "MA0046:Use EventHandler<T> to declare events", Justification = "<Pending>", Scope = "member", Target = "~E:Job.UC.IFileManager.OnDeleteFile")]
[assembly: SuppressMessage("Design", "MA0046:Use EventHandler<T> to declare events", Justification = "<Pending>", Scope = "member", Target = "~E:Job.UC.IFileManager.OnError")]
[assembly: SuppressMessage("Design", "MA0046:Use EventHandler<T> to declare events", Justification = "<Pending>", Scope = "member", Target = "~E:Job.UC.IFileManager.OnRefreshDirectory")]
[assembly: SuppressMessage("Design", "MA0046:Use EventHandler<T> to declare events", Justification = "<Pending>", Scope = "member", Target = "~E:Job.UC.IFileManager.OnSelectFileName")]
[assembly: SuppressMessage("Design", "MA0046:Use EventHandler<T> to declare events", Justification = "<Pending>", Scope = "member", Target = "~E:Job.UC.IFileManager.OnSelectParent")]
[assembly: SuppressMessage("Design", "MA0069:Non-constant static fields should not be visible", Justification = "<Pending>", Scope = "member", Target = "~F:Job.Profiles.ProfilesController.CurrentProfile")]
[assembly: SuppressMessage("Design", "MA0069:Non-constant static fields should not be visible", Justification = "<Pending>", Scope = "member", Target = "~F:Job.Static.Pdf.Common.PdfHelper.mn")]
[assembly: SuppressMessage("Design", "MA0069:Non-constant static fields should not be visible", Justification = "<Pending>", Scope = "member", Target = "~F:Job.UC.FileManager.CopyPaste")]
[assembly: SuppressMessage("Design", "MA0056:Do not call overridable members in constructor", Justification = "<Pending>", Scope = "member", Target = "~M:Interfaces.Plugins.AbstractPluginAddWork`1.#ctor")]
[assembly: SuppressMessage("Design", "MA0025:Implement the functionality instead of throwing NotImplementedException", Justification = "<Pending>", Scope = "member", Target = "~M:Job.Ext.ToolStripItemExtention.Clone(System.Windows.Forms.ToolStripMenuItem)~System.Windows.Forms.ToolStripMenuItem")]
[assembly: SuppressMessage("Design", "MA0051:Method is too long", Justification = "<Pending>", Scope = "member", Target = "~M:Job.Ext.ToolStripItemExtention.Clone(System.Windows.Forms.ToolStripMenuItem)~System.Windows.Forms.ToolStripMenuItem")]
[assembly: SuppressMessage("Usage", "MA0006:Use String.Equals instead of equality operator", Justification = "<Pending>", Scope = "member", Target = "~M:Job.Ext.ToolStripItemExtention.Clone(System.Windows.Forms.ToolStripMenuItem)~System.Windows.Forms.ToolStripMenuItem")]
[assembly: SuppressMessage("Usage", "MA0011:IFormatProvider is missing", Justification = "<Pending>", Scope = "member", Target = "~M:Job.Fasades.BaseManager.Search(System.String)~System.Collections.Generic.List{Interfaces.IJob}")]
[assembly: SuppressMessage("Usage", "MA0015:Specify the parameter name in ArgumentException", Justification = "<Pending>", Scope = "member", Target = "~M:Job.Fasades.CategoryManager.Add(System.String)~System.Object")]
[assembly: SuppressMessage("Design", "MA0016:Prefer return collection abstraction instead of implementation", Justification = "<Pending>", Scope = "member", Target = "~M:Job.Fasades.CategoryToCustomerAsignManager.GetCustomerCategories(Interfaces.IUserProfile,System.Object)~System.Collections.Generic.List{Interfaces.ICategory}")]
[assembly: SuppressMessage("Design", "MA0061:Method overrides should not change parameter defaults", Justification = "<Pending>", Scope = "member", Target = "~M:Job.Fasades.CustomerManager.CheckCustomerPresent(System.String,System.Boolean)~System.Boolean")]
[assembly: SuppressMessage("Usage", "MA0011:IFormatProvider is missing", Justification = "<Pending>", Scope = "member", Target = "~M:Job.Fasades.JobManager.GetFullPathToWorkFolder(Interfaces.IJob)~System.String")]
[assembly: SuppressMessage("Usage", "MA0011:IFormatProvider is missing", Justification = "<Pending>", Scope = "member", Target = "~M:Job.FormPdfPreview.GetInkCoverage(System.String)~System.String")]
[assembly: SuppressMessage("Usage", "MA0074:Avoid implicit culture-sensitive methods", Justification = "<Pending>", Scope = "member", Target = "~M:Job.Menus.FileBrowserContextMenuSendTo.Get(System.EventHandler)~System.Collections.Generic.List{System.Windows.Forms.ToolStripMenuItem}")]
[assembly: SuppressMessage("Design", "MA0051:Method is too long", Justification = "<Pending>", Scope = "member", Target = "~M:Job.Menus.FileBrowserContextMenuUtils.GetToolStripButtons(System.Int32,System.EventHandler,System.Boolean)~System.Collections.Generic.List{System.Windows.Forms.ToolStripItem}")]
[assembly: SuppressMessage("Usage", "MA0002:IEqualityComparer<string> or IComparer<string> is missing", Justification = "<Pending>", Scope = "member", Target = "~M:Job.Menus.FileBrowserContextMenuUtils.GetToolStripButtons(System.Int32,System.EventHandler,System.Boolean)~System.Collections.Generic.List{System.Windows.Forms.ToolStripItem}")]
[assembly: SuppressMessage("Usage", "MA0021:Use StringComparer.GetHashCode instead of string.GetHashCode", Justification = "<Pending>", Scope = "member", Target = "~M:Job.PlateFormat.GetHashCode~System.Int32")]
[assembly: SuppressMessage("Design", "MA0025:Implement the functionality instead of throwing NotImplementedException", Justification = "<Pending>", Scope = "member", Target = "~M:Job.Profiles.FileBrowsers.BrowserEventsOnChangeStatus(System.Object,Interfaces.IJob)")]
[assembly: SuppressMessage("Usage", "MA0091:Sender should be 'this' for instance events", Justification = "<Pending>", Scope = "member", Target = "~M:Job.Profiles.ProfileEvents.BrowserEvents.Init(Interfaces.IUserProfile)")]
[assembly: SuppressMessage("Design", "MA0026:Fix TODO comment", Justification = "<Pending>", Scope = "member", Target = "~M:Job.Profiles.ProfilesController.AddProfile~Job.Profiles.Profile")]
[assembly: SuppressMessage("Usage", "MA0074:Avoid implicit culture-sensitive methods", Justification = "<Pending>", Scope = "member", Target = "~M:Job.Profiles.ProfilesController.LoadProfiles(System.String)")]
[assembly: SuppressMessage("Design", "MA0051:Method is too long", Justification = "<Pending>", Scope = "member", Target = "~M:Job.Static.FileUtil.WhoIsLocking(System.String)~System.Collections.Generic.List{System.Diagnostics.Process}")]
[assembly: SuppressMessage("Design", "MA0016:Prefer return collection abstraction instead of implementation", Justification = "<Pending>", Scope = "member", Target = "~M:Job.Static.FileUtil.WhoIsLocking(System.String)~System.Collections.Generic.List{System.Diagnostics.Process}")]
[assembly: SuppressMessage("Design", "MA0016:Prefer return collection abstraction instead of implementation", Justification = "<Pending>", Scope = "member", Target = "~M:Job.Static.Pdf.Common.PdfHelper.GetPagesInfo(System.String)~System.Collections.Generic.List{Job.Static.Pdf.Common.PdfPageInfo}")]
[assembly: SuppressMessage("Design", "MA0051:Method is too long", Justification = "<Pending>", Scope = "member", Target = "~M:Job.Static.Pdf.Create.Rectangle.PdfCreateRectangle.Run(System.String)")]
[assembly: SuppressMessage("Design", "MA0051:Method is too long", Justification = "<Pending>", Scope = "member", Target = "~M:Job.Static.Pdf.Divide.PdfDivider.Run(System.String)")]
[assembly: SuppressMessage("Design", "MA0026:Fix TODO comment", Justification = "<Pending>", Scope = "member", Target = "~M:Job.Static.Pdf.Imposition.Product.PdfProduct.ExportToPdf(System.String)")]
[assembly: SuppressMessage("Design", "MA0051:Method is too long", Justification = "<Pending>", Scope = "member", Target = "~M:Job.Static.Pdf.Scale.PdfScaler.Run(System.String)")]
[assembly: SuppressMessage("Design", "MA0051:Method is too long", Justification = "<Pending>", Scope = "member", Target = "~M:Job.Static.Pdf.SplitOddAndEven.PdfSplitOddAndEven.Run(System.String)")]
[assembly: SuppressMessage("Design", "MA0051:Method is too long", Justification = "<Pending>", Scope = "member", Target = "~M:Job.Static.Pdf.SplitSpread.PdfSpliter.Run(System.String)")]
[assembly: SuppressMessage("Usage", "MA0099:Use Explicit enum value instead of 0", Justification = "<Pending>", Scope = "member", Target = "~M:Job.Static.PdfUtils.GetColorspaceImage(Interfaces.IFileSystemInfoExt)")]
[assembly: SuppressMessage("Usage", "MA0002:IEqualityComparer<string> or IComparer<string> is missing", Justification = "<Pending>", Scope = "member", Target = "~M:Job.Static.PdfUtils.GetColorspacePdf(Interfaces.IFileSystemInfoExt)")]
[assembly: SuppressMessage("Usage", "MA0099:Use Explicit enum value instead of 0", Justification = "<Pending>", Scope = "member", Target = "~M:Job.Static.PdfUtils.GetColorspacePdf(Interfaces.IFileSystemInfoExt)")]
[assembly: SuppressMessage("Design", "MA0051:Method is too long", Justification = "<Pending>", Scope = "member", Target = "~M:Job.Static.PdfUtils.GetColorspacePdf(Interfaces.IFileSystemInfoExt)")]
[assembly: SuppressMessage("Usage", "MA0011:IFormatProvider is missing", Justification = "<Pending>", Scope = "member", Target = "~M:Job.Static.PdfUtils.SetTrimBoxWidth(System.String,System.Object)")]
[assembly: SuppressMessage("Usage", "MA0011:IFormatProvider is missing", Justification = "<Pending>", Scope = "member", Target = "~M:Job.Statuses.StatusesParams.Run(Interfaces.IJob)")]
[assembly: SuppressMessage("Security", "MA0009:Add regex evaluation timeout", Justification = "<Pending>", Scope = "member", Target = "~M:Job.UC.FileBrowser.AddTirag")]
[assembly: SuppressMessage("Design", "MA0026:Fix TODO comment", Justification = "<Pending>", Scope = "member", Target = "~M:Job.UC.FileBrowser.GetFilesInfo")]
[assembly: SuppressMessage("Usage", "MA0011:IFormatProvider is missing", Justification = "<Pending>", Scope = "member", Target = "~M:Job.UC.FileBrowser.ObjectListView1_DragDrop(System.Object,System.Windows.Forms.DragEventArgs)")]
[assembly: SuppressMessage("Usage", "MA0074:Avoid implicit culture-sensitive methods", Justification = "<Pending>", Scope = "member", Target = "~M:Job.UC.FileBrowser.ObjectListView1_DragDrop(System.Object,System.Windows.Forms.DragEventArgs)")]
[assembly: SuppressMessage("Usage", "MA0011:IFormatProvider is missing", Justification = "<Pending>", Scope = "member", Target = "~M:Job.UC.FileBrowser.ProcessAppFile(Interfaces.IFileSystemInfoExt,Job.Menus.MenuSendTo)")]
[assembly: SuppressMessage("Usage", "MA0011:IFormatProvider is missing", Justification = "<Pending>", Scope = "member", Target = "~M:Job.UC.FileBrowser.ProcessAppFolder(Job.Menus.MenuSendTo)")]
[assembly: SuppressMessage("Usage", "MA0011:IFormatProvider is missing", Justification = "<Pending>", Scope = "member", Target = "~M:Job.UC.FileBrowser.ProcessScriptFile(Interfaces.IFileSystemInfoExt,Job.Menus.MenuSendTo)")]
[assembly: SuppressMessage("Usage", "MA0011:IFormatProvider is missing", Justification = "<Pending>", Scope = "member", Target = "~M:Job.UC.FileBrowser.ProcessScriptFolder(Job.Menus.MenuSendTo)")]
[assembly: SuppressMessage("Usage", "MA0011:IFormatProvider is missing", Justification = "<Pending>", Scope = "member", Target = "~M:Job.UC.FileBrowser.SendMenuItem_ClickAsync(System.Object,System.EventArgs)")]
[assembly: SuppressMessage("Design", "MA0051:Method is too long", Justification = "<Pending>", Scope = "member", Target = "~M:Job.UC.FileBrowser.SetToMoveFolders")]
[assembly: SuppressMessage("Usage", "MA0011:IFormatProvider is missing", Justification = "<Pending>", Scope = "member", Target = "~M:Job.UC.FileBrowser.ShowPreview(Interfaces.IFileSystemInfoExt)")]
[assembly: SuppressMessage("Usage", "MA0011:IFormatProvider is missing", Justification = "<Pending>", Scope = "member", Target = "~M:Job.UC.FileBrowser.ToolsStripMenuItem_Click(System.Object,System.EventArgs)")]
[assembly: SuppressMessage("Usage", "MA0093:EventArgs should not be null", Justification = "<Pending>", Scope = "member", Target = "~M:Job.UC.FileBrowser.ToolStripButton1_Click(System.Object,System.EventArgs)")]
[assembly: SuppressMessage("Design", "MA0025:Implement the functionality instead of throwing NotImplementedException", Justification = "<Pending>", Scope = "member", Target = "~M:Job.UC.FileCache.GetAllFiles(System.String)~System.Collections.Generic.List{Interfaces.IFileSystemInfoExt}")]
[assembly: SuppressMessage("Design", "MA0025:Implement the functionality instead of throwing NotImplementedException", Justification = "<Pending>", Scope = "member", Target = "~M:Job.UC.FileCache.GetCountFiles~System.Int32")]
[assembly: SuppressMessage("Design", "MA0025:Implement the functionality instead of throwing NotImplementedException", Justification = "<Pending>", Scope = "member", Target = "~M:Job.UC.FileCache.GetDirs(System.String)~System.Collections.Generic.List{Interfaces.IFileSystemInfoExt}")]
[assembly: SuppressMessage("Design", "MA0025:Implement the functionality instead of throwing NotImplementedException", Justification = "<Pending>", Scope = "member", Target = "~M:Job.UC.FileCache.GetFiles(System.String)~System.Collections.Generic.List{Interfaces.IFileSystemInfoExt}")]
[assembly: SuppressMessage("Usage", "MA0011:IFormatProvider is missing", Justification = "<Pending>", Scope = "member", Target = "~M:Job.UC.FileManager.ChangeDirectory(Interfaces.IFileSystemInfoExt)")]
[assembly: SuppressMessage("Design", "MA0025:Implement the functionality instead of throwing NotImplementedException", Justification = "<Pending>", Scope = "member", Target = "~M:Job.UC.FileManager.CreateDirectoryInCurrentFolder(System.String,System.Action{System.String})")]
[assembly: SuppressMessage("Design", "MA0026:Fix TODO comment", Justification = "<Pending>", Scope = "member", Target = "~M:Job.UC.FileManager.GetTempFolder")]
[assembly: SuppressMessage("Usage", "MA0011:IFormatProvider is missing", Justification = "<Pending>", Scope = "member", Target = "~M:Job.UC.FileManager.MoveFilesToTrash(Interfaces.IFileSystemInfoExt[])")]
[assembly: SuppressMessage("Design", "MA0055:Do not use finalizer", Justification = "<Pending>", Scope = "member", Target = "~M:Job.UC.FileWatcher.Finalize")]
[assembly: SuppressMessage("Design", "MA0016:Prefer return collection abstraction instead of implementation", Justification = "<Pending>", Scope = "member", Target = "~M:Job.UC.ICache`1.GetAllFiles(System.String)~System.Collections.Generic.List{`0}")]
[assembly: SuppressMessage("Design", "MA0016:Prefer return collection abstraction instead of implementation", Justification = "<Pending>", Scope = "member", Target = "~M:Job.UC.ICache`1.GetDirs(System.String)~System.Collections.Generic.List{`0}")]
[assembly: SuppressMessage("Design", "MA0016:Prefer return collection abstraction instead of implementation", Justification = "<Pending>", Scope = "member", Target = "~M:Job.UC.ICache`1.GetFiles(System.String)~System.Collections.Generic.List{`0}")]
[assembly: SuppressMessage("Design", "MA0016:Prefer return collection abstraction instead of implementation", Justification = "<Pending>", Scope = "member", Target = "~M:Job.UC.IFileManager.GetDirs~System.Collections.Generic.List{Interfaces.IFileSystemInfoExt}")]
[assembly: SuppressMessage("Design", "MA0016:Prefer return collection abstraction instead of implementation", Justification = "<Pending>", Scope = "member", Target = "~M:Job.UC.IFileManager.GetFiles(System.String)~System.Collections.Generic.List{Interfaces.IFileSystemInfoExt}")]
[assembly: SuppressMessage("Design", "MA0051:Method is too long", Justification = "<Pending>", Scope = "member", Target = "~M:Job.UC.UcFtpBrowser.Init")]
[assembly: SuppressMessage("Usage", "MA0011:IFormatProvider is missing", Justification = "<Pending>", Scope = "member", Target = "~M:Job.UC.UcJobList.InitOlvColumns")]
[assembly: SuppressMessage("Design", "MA0026:Fix TODO comment", Justification = "<Pending>", Scope = "member", Target = "~M:Job.UC.UcJobList.ObjectListView_NewWorks_Dropped(System.Object,BrightIdeasSoftware.OlvDropEventArgs)")]
[assembly: SuppressMessage("Usage", "MA0002:IEqualityComparer<string> or IComparer<string> is missing", Justification = "<Pending>", Scope = "member", Target = "~M:Job.UserForms.FormCustomers.SetFtpParam(Job.Customer)")]
[assembly: SuppressMessage("Usage", "MA0015:Specify the parameter name in ArgumentException", Justification = "<Pending>", Scope = "member", Target = "~M:PDFManipulate.Forms.FormDividerParams.ButtonOk_Click(System.Object,System.EventArgs)")]
[assembly: SuppressMessage("Usage", "MA0011:IFormatProvider is missing", Justification = "<Pending>", Scope = "member", Target = "~M:PDFManipulate.Forms.FormDividerParams.ConvertToIntArray(System.String,System.Int32[]@)~System.Boolean")]
[assembly: SuppressMessage("Usage", "MA0011:IFormatProvider is missing", Justification = "<Pending>", Scope = "member", Target = "~M:PDFManipulate.Forms.FormSelectCountPages.ConvertToIntArray(System.String,System.Int32[]@)~System.Boolean")]
[assembly: SuppressMessage("Design", "MA0016:Prefer return collection abstraction instead of implementation", Justification = "<Pending>", Scope = "member", Target = "~P:Job.Customer.UsedPlateFormats")]
[assembly: SuppressMessage("Design", "MA0016:Prefer return collection abstraction instead of implementation", Justification = "<Pending>", Scope = "member", Target = "~P:Job.Models.CategoryToCustomer.CategoriedIdList")]
[assembly: SuppressMessage("Design", "MA0016:Prefer return collection abstraction instead of implementation", Justification = "<Pending>", Scope = "member", Target = "~P:Job.Static.Pdf.Imposition.Content.PdfContent.ContentFiles")]
[assembly: SuppressMessage("Design", "MA0016:Prefer return collection abstraction instead of implementation", Justification = "<Pending>", Scope = "member", Target = "~P:Job.Static.Pdf.Imposition.Content.PdfContentFile.Pages")]
[assembly: SuppressMessage("Design", "MA0016:Prefer return collection abstraction instead of implementation", Justification = "<Pending>", Scope = "member", Target = "~P:Job.Static.Pdf.Imposition.Page.PdfPageRunList.Pages")]
[assembly: SuppressMessage("Design", "MA0016:Prefer return collection abstraction instead of implementation", Justification = "<Pending>", Scope = "member", Target = "~P:Job.Static.Pdf.Imposition.Product.PdfProduct.ProductParts")]
[assembly: SuppressMessage("Design", "MA0016:Prefer return collection abstraction instead of implementation", Justification = "<Pending>", Scope = "member", Target = "~P:Job.Static.Pdf.Imposition.Sheet.PdfSheetRunList.Sheets")]
[assembly: SuppressMessage("Design", "MA0016:Prefer return collection abstraction instead of implementation", Justification = "<Pending>", Scope = "member", Target = "~P:Job.Static.Pdf.MergeTemporary.PdfMergeTemporaryParams.Files")]
[assembly: SuppressMessage("Design", "MA0016:Prefer return collection abstraction instead of implementation", Justification = "<Pending>", Scope = "member", Target = "~P:Job.UserForms.FormCreateEmptiesWithCount.PdfTemplates")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:ActiveWorks.FtpManager")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Interfaces.Plugins.AbstractPluginAddWork`1")]
[assembly: SuppressMessage("Design", "MA0016:Prefer return collection abstraction instead of implementation", Justification = "<Pending>", Scope = "type", Target = "~T:Interfaces.Plugins.AbstractPluginAddWork`1")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Interfaces.Plugins.AbstractProcess`1")]
[assembly: SuppressMessage("Design", "MA0016:Prefer return collection abstraction instead of implementation", Justification = "<Pending>", Scope = "type", Target = "~T:Interfaces.Plugins.AbstractProcess`1")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Annotations.CanBeNullAttribute")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.CachePay")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Category")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.ColorProof")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Commons")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Controllers.ISignaController")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Controllers.SignaChangeOrderNumberParams")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Controllers.SignaController")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Controllers.SignaController.AbstractCommand")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Controllers.SignaController.CommandReplaceDecimal")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Controllers.SignaController.CommandReplaceText")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Customer")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.CustomerNotify.CustomerMailNotify")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.CustomerNotify.CustomerMailNotifyManager")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.CustomerReport")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.CustomForms.FormEditStatus")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.CustomForms.FormEnterText")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Data.MongoRepository")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Dlg.FormChangeJobsPath")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Dlg.FormInputCountPages")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Dlg.FormSelectBackFile")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Dlg.FormSelectBackFile.DisplayFile")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Dlg.FormSelectConvertToPdfMode")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Dlg.FormSelectDpi")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Dlg.FormTirag")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Ext.Extensions")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Ext.ToolStripItemExtention")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Factory")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Fasades.BaseManager")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Fasades.CategoryManager")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Fasades.CategoryToCustomerAsignManager")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Fasades.ColorProofManager")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Fasades.CustomerManager")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Fasades.CustomerManager.EventHandler")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Fasades.JobManager")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Fasades.JobStatusManager")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Fasades.PlateOwnersManager")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.FormEvent")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.FormEventManager")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.FormEventManager.EventHandler")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.FormEventStatus")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.FormPdfPreview")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Forms")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.FtpSettings")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Job")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.JobLogger")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Localize")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Menus.FileBrowserContextMenuSendTo")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Menus.FileBrowserContextMenuUtils")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Menus.MenuManager")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Menus.MenuSendTo")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Models.CategoryToCustomer")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Models.FileSystemInfoExt")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Models.JobParameters")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Models.JobSettings")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Models.PdfEmptyTemplate")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.ModelView.CategoryToCustomerView")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Part")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.PayedDate")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.PlateFormat")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.PlateOwner")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Profiles.ExtendedSettings")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Profiles.FileBrowsers")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Profiles.FileBrowserSettings")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Profiles.MailSettings")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Profiles.MongoDbSettings")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Profiles.PdfConverterSettings")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Profiles.Profile")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Profiles.ProfileEvents.AbstractEvents")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Profiles.ProfileEvents.BrowserEvents")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Profiles.ProfileEvents.FtpEvents")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Profiles.ProfileEvents.JobEvents")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Profiles.ProfileEvents.ProfileEvents")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Profiles.ProfilesController")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Profiles.ProfileSettings")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Profiles.RabbitMqSettings")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Profiles.SearchHistory")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Profiles.SearchHistorySettings")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Properties.Resources")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.ReportCustomerTree")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.ReportJobsTree")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.ReportPlateFormatTree")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Settings")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Settings.JobStatus")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.SignaJobEnum")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.SignaJobShablon")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Converter")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.FileFormatsUtil")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.FileUtil")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.FileUtil.RM_APP_TYPE")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.FileUtil.RM_PROCESS_INFO")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.FileUtil.RM_UNIQUE_PROCESS")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.FtpState")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.FtpStateItem")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.NaturalSorting")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.NaturalSorting.FileBleedComparer")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.NaturalSorting.FileDateComparer")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.NaturalSorting.FileHeightComparer")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.NaturalSorting.FileNameNaturalComparer")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.NaturalSorting.FilePagesComparer")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.NaturalSorting.FileWidthComparer")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.NaturalSorting.NaturalComparer")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.NaturalSorting.NaturalFileInfoNameComparer")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.NaturalSorting.NaturalStringComparer")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.NaturalSorting.OrderCategoryComparer")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.NaturalSorting.OrderCustomerComparer")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.NaturalSorting.OrderDateComparer")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.NaturalSorting.SafeNativeMethods")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Common.Box")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Common.Boxes")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Common.ConvertModeEnum")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Common.DivideModeEnum")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Common.EmptyTemplate")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Common.ExtendBoxHelpers")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Common.PdfHelper")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Common.PdfMergeFile")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Common.PdfPageInfo")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Common.ScaleByEnum")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Common.ScaleVariantEnum")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Common.TargetSize")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Convert.PdfConvert")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Convert.PdfConvertParams")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Create.Ellipse.PdfCreateEllipse")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Create.EmptyPdfTemplateWithCount.PdfCreateEmptyPdfTemplateWithCount")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Create.Rectangle.PdfCreateRectangle")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Divide.PdfDivider")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Divide.PdfDividerParams")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.ExtractPages.PdfExtractPages")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.ExtractPages.PdfExtractPagesParams")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Imposition.Common.BindingMethodEnum")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Imposition.Common.Fields")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Imposition.Common.PdfFormat")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Imposition.Common.PdfPlacementInstruction")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Imposition.Common.PdfSideEnum")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Imposition.Common.Position")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Imposition.Common.SchemeModeEnum")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Imposition.Common.SheetWorkStyleEnum")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Imposition.Common.WorkModeEnum")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Imposition.Content.PdfContent")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Imposition.Content.PdfContentFile")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Imposition.Content.PdfContentFilePage")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Imposition.Controllers.PdfImpositionController")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Imposition.Export.EDocument")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Imposition.Export.EPage")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Imposition.Page.PdfMasterPage")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Imposition.Page.PdfPage")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Imposition.Page.PdfPageRun")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Imposition.Page.PdfPageRunList")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Imposition.PdfImposTest")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Imposition.Product.PdfProduct")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Imposition.Product.PdfProductPart")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Imposition.Scheme.PdfMasterScheme")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Imposition.Scheme.PdfScheme")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Imposition.Scheme.PdfSchemeList")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Imposition.Scheme.PdfSchemePage")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Imposition.Scheme.PdfSchemePageSide")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Imposition.Sheet.PdfMasterSheet")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Imposition.Sheet.PdfMasterSheetList")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Imposition.Sheet.PdfSheetRun")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Imposition.Sheet.PdfSheetRunList")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Imposition.Subject.PdfSubject")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Imposition.Subject.PdfSubjectSettings")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Merge.PdfMerger")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.MergeFrontsAndBack.PdfMergeFrontsAndBack")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.MergeFrontsAndBack.PdfMergeFrontsAndBackParams")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.MergeOddAndEven.PdfMergeOddAndEven")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.MergeOddAndEven.PdfMergeOddAndEvenParams")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.MergeTemporary.PdfMergeTemporary")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.MergeTemporary.PdfMergeTemporaryParams")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Repeat.Document.PdfRepeatDocument")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Repeat.Document.PdfRepeatDocumentParams")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Repeat.PdfRepeatParamsBase")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.RepeatPages.PdfRepeatPages")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.RepeatPages.PdfRepeatPagesParams")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Reverse.PdfReverse")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.RotateMirrorFrontAndBack.PdfRotateMirrorFrontAndBack")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Scale.PdfScaleParams")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.Scale.PdfScaler")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.SetTrimBox.ByBleed.PdfSetTrimBoxByBleed")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.SetTrimBox.ByBleed.PdfSetTrimBoxByBleedParams")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.SetTrimBox.ByFormat.PdfSetTrimBoxByFormat")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.SetTrimBox.ByFormat.PdfSetTrimBoxByFormatParams")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.SetTrimBox.BySpread.PdfSetTrimBoxBySpread")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.SetTrimBox.BySpread.PdfSetTrimBoxBySpreadParams")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.SetTrimBox.SetTrimBoxBase")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.SplitCoverAndBlock.PdfSplitCoverAndBlock")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.SplitOddAndEven.PdfSplitOddAndEven")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.SplitSpread.PdfSpliter")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.SplitSpread.PdfSplitterParams")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.SplitTemporary.PdfSplitTemporary")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.ToJpg.PdfToJpg")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.Pdf.ToJpg.PdfToJpgParams")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.PdfScale.ExtendTargetSizeHelpers")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.PdfUtils")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.SaveAndLoad")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.ShellUtilities")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.ShellUtilities.SHFILEINFO")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.SysImageListHelper")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.ThemeController")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.ThemeEnum")]
[assembly: SuppressMessage("Design", "MA0048:File name must match type name", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Static.ThemeEnum")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Statuses.JobStatus")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Statuses.StatusChangeParam")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.Statuses.StatusesParams")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.UC.FileBrowser")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.UC.FileBrowserSettings")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.UC.FileCache")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.UC.FileManager")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.UC.FileWatcher")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.UC.ICache`1")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.UC.IFileManager")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.UC.IWatcher")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.UC.NoCache")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.UC.NoWatcher")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.UC.RoundedButton")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.UC.UcAddWorkPluginsContainer")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.UC.UcFtpBrowser")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.UC.UcJobList")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.UC.UcNote")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.UC.UcTexBox")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.UserForms.FormAddWork2")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.UserForms.FormCombineOrders")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.UserForms.FormCreateEmptiesWithCount")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.UserForms.FormCustomers")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.UserForms.FormEditFolder")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.UserForms.FormFileBrowserSettings")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.UserForms.FormFtpDirectoryList")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.UserForms.FormFtpSettings")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.UserForms.FormGetTrimBox")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.UserForms.FormGetTrimBox.PaperFormat")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.UserForms.FormMailInformerSettings")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.UserForms.FormPdfSplitterParams")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.UserForms.FormSelectPdfNewSize")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.UserForms.PDF.FormList")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.UserForms.SpreadBox")]
[assembly: SuppressMessage("Performance", "MA0008:Add StructLayoutAttribute", Justification = "<Pending>", Scope = "type", Target = "~T:Job.UserForms.SpreadBox")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.UserForms.TrimBoxResult")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:Job.UserForms.TrimBoxResultEnum")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:PDFManipulate.Forms.FormDividerParams")]
[assembly: SuppressMessage("Architecture", "DV2002:Unmapped types", Justification = "<Pending>", Scope = "type", Target = "~T:PDFManipulate.Forms.FormSelectCountPages")]
